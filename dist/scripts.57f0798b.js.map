{"version":3,"sources":["js/lazyLoadImages.js","js/scripts.js"],"names":["createObserver","targets","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","load","target","rootMargin","el","observe","getAttribute","src","removeAttribute","srcset","module","exports","document","querySelectorAll","console","log","length","lazyLoadImages","require","ajax","config","request","XMLHttpRequest","open","url","async","onload","status","success","JSON","parse","responseText","onerror","send","parallax","window","scrollY","innerHeight","querySelector","getBoundingClientRect","top","body","scrollTop","slice","call","element","currentPosition","bodyHeight","offsetHeight","serviceHeight","style","loadFonts","fonts","ready","then","fontFaceSet","documentElement","className","addEventListener","e","classList","toggle","result","textContent","value"],"mappings":";AAMA,SAASA,EAAeC,GAChBC,IAAAA,EAAW,IAAIC,qBAAqB,SAAUC,GAC9CA,EAAQC,QAAQ,SAASC,GAClBA,EAAMC,kBAAoB,GACzBC,EAAKF,EAAMG,WAGpB,CACCC,WAAY,QAEhBT,EAAQI,QAAQ,SAAUM,GACtBT,EAASU,QAAQD,KAIzB,SAASH,EAAKG,GACPA,EAAGE,aAAa,aACfF,EAAGG,IAAMH,EAAGE,aAAa,YACzBF,EAAGI,gBAAgB,aACbJ,EAAGE,aAAa,iBACtBF,EAAGK,OAASL,EAAGE,aAAa,eAC5BF,EAAGI,gBAAgB,gBA3B3BE,OAAOC,QAAU,WACTjB,IAAAA,EAAUkB,SAASC,iBAAiB,qCACxCC,QAAQC,IAAIrB,EAAQsB,QACpBvB,EAAeC;;ACHnB,IAAIuB,EAAiBC,QAAQ,oBAwB7B,SAASC,EAAKC,GACNC,IAAAA,EAAU,IAAIC,eAClBD,EAAQE,KAAK,MAAOH,EAAOI,IAAKJ,EAAOK,OAEvCJ,EAAQK,OAAS,WACTL,EAAQM,QAAU,KAAON,EAAQM,OAAS,KAE1CP,EAAOQ,QAAQC,KAAKC,MAAMT,EAAQU,gBAO1CV,EAAQW,QAAU,aAIlBX,EAAQY,OAGZ,SAASC,IACgD,IAAlDtB,SAASC,iBAAiB,aAAaG,SAC7BmB,OAAOC,QAAUD,OAAOE,aAChBzB,SAAS0B,cAAc,aAAaC,wBAAwBC,IAAM5B,SAAS6B,KAAKC,WAG9FC,GAAAA,MAAMC,KAAKhC,SAASC,iBAAiB,uBAAuBf,QAAQ,SAAU+C,GACzEC,IAAAA,EAAkBX,OAAOC,QAAUD,OAAOE,YAAc,EACxDU,EAAanC,SAAS0B,cAAc,QAAQU,aAC5CC,EAAgBrC,SAAS0B,cAAc,sBAAsBU,aAEjEH,EAAQK,MAAMV,IAAMS,EAAgBH,EAAkBC,EAAa,QAM/E,SAASI,IACFvC,SAASwC,QACRxC,SAASwC,MAAMnD,KAAK,eAEpBW,SAASwC,MAAMC,MAAMC,KAAK,SAASC,GAC/B3C,SAAS4C,gBAAgBC,WAAa,mBAhE9C7C,SAAS0B,cAAc,qBAAqBoB,iBAAiB,QAAS,SAA0BC,GAC5F/C,SAAS0B,cAAc,sBAAsBsB,UAAUC,OAAO,6BAGlE3B,IACAjB,IAEAkB,OAAOuB,iBAAiB,SAAUxB,GAClCC,OAAOuB,iBAAiB,SAAUxB,GAElCtB,SAAS0B,cAAc,WAAWoB,iBAAiB,QAAS,WACxDvC,EAAK,CACDK,IAAK,0CACLI,QAAS,SAASkC,GACdlD,SAAS0B,cAAc,iBAAiByB,YAAcD,EAAOE,OAEjEvC,OAAO","file":"scripts.57f0798b.js","sourceRoot":"..","sourcesContent":["module.exports = function lazyLoadImages() {\n    var targets = document.querySelectorAll(\"img[data-src],source[data-srcset]\");\n    console.log(targets.length);\n    createObserver(targets);\n};\n\nfunction createObserver(targets) {\n    var observer = new IntersectionObserver(function (entries) {\n        entries.forEach(function(entry) {\n            if(entry.intersectionRatio > 0) {\n                load(entry.target);\n            }\n        });\n    }, {\n        rootMargin: '20%'\n    });\n    targets.forEach(function (el) {\n        observer.observe(el);\n    });\n}\n\nfunction load(el) {\n    if(el.getAttribute('data-src')) {\n        el.src = el.getAttribute('data-src');\n        el.removeAttribute('data-src');\n    } else if(el.getAttribute('data-srcset')) {\n        el.srcset = el.getAttribute('data-srcset');\n        el.removeAttribute('data-srcset');\n    }\n}","var lazyLoadImages = require(\"./lazyLoadImages\");\n\n(function init() {\n    document.querySelector(\".header__nav-icon\").addEventListener(\"click\", function toggleNavigation(e) {\n        document.querySelector(\".header__nav-items\").classList.toggle(\"header__nav-items--show\");\n    });\n\n    parallax();\n    lazyLoadImages();\n\n    window.addEventListener('scroll', parallax);\n    window.addEventListener('resize', parallax);\n\n    document.querySelector(\".footer\").addEventListener(\"click\", function() {\n        ajax({\n            url: \"https://api.chucknorris.io/jokes/random\",\n            success: function(result) {\n                document.querySelector(\".footer__text\").textContent = result.value;\n            },\n            async: false\n        });\n    });\n})();\n\nfunction ajax(config) {\n    var request = new XMLHttpRequest();\n    request.open('GET', config.url, config.async);\n\n    request.onload = function() {\n        if (request.status >= 200 && request.status < 400) {\n            // Success!\n            config.success(JSON.parse(request.responseText));\n        } else {\n            // We reached our target server, but it returned an error\n\n        }\n    };\n\n    request.onerror = function() {\n        // There was a connection error of some sort\n    };\n\n    request.send();\n}\n\nfunction parallax() {\n    if(document.querySelectorAll(\".services\").length === 0) return;\n    var scroll = window.scrollY + window.innerHeight;\n    var servicesOffset = document.querySelector(\".services\").getBoundingClientRect().top + document.body.scrollTop;\n\n    if (scroll >= servicesOffset) {\n        [].slice.call(document.querySelectorAll(\".services__overlay\")).forEach(function (element) {\n            var currentPosition = window.scrollY + window.innerHeight / 2;\n            var bodyHeight = document.querySelector(\"body\").offsetHeight;\n            var serviceHeight = document.querySelector(\".services__service\").offsetHeight;\n\n            element.style.top = serviceHeight * currentPosition / bodyHeight + \"px\";\n\n        });\n    }\n}\n\nfunction loadFonts() {\n    if(document.fonts) {\n        document.fonts.load(\"1em Raleway\");\n\n        document.fonts.ready.then(function(fontFaceSet) {\n            document.documentElement.className += \" fonts-loaded\";\n\n        });\n    }\n}\n"]}